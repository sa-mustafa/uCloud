/*
 * uCloud API collection
 *
 * uCloud is a collection of image APIs.
 *
 * OpenAPI spec version: 1.0.2
 * Contact: help@bps-eng.co.ir
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

namespace Bps.uCloud.API.Controllers
{
    using System;
    using System.Collections.Generic;
    using Microsoft.AspNetCore.Mvc;
    using Swashbuckle.AspNetCore.Annotations;
    using Swashbuckle.AspNetCore.SwaggerGen;
    using Newtonsoft.Json;
    using System.ComponentModel.DataAnnotations;
    using Bps.uCloud.API.Attributes;
    using Bps.uCloud.API.Security;
    using Microsoft.AspNetCore.Authorization;
    using Bps.uCloud.API.Models;
    using Bps.uCloud.API.Settings;
    using Bps.uCloud.Contracts.Entities;

    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class MatchingApiController : ControllerBase
    {
        #region Fields

        IAppSettings app;

        #endregion

        #region Constructor

        public MatchingApiController(IAppSettings appSettings)
        {
            app = appSettings;
        }

        #endregion

        #region Methods

        /// <summary>
        /// Find model
        /// </summary>
        /// <remarks>Find model instances in an image by the matcher.</remarks>
        /// <param name="name">Matcher name to query</param>
        /// <param name="image">Image data for matching</param>
        /// <param name="minScore">Minimum match score</param>
        /// <param name="matchesCount">Maximum count of matches to return; 0 means all matches should be returned.</param>
        /// <param name="maxOverlap">Maximum overlap of the model instances.</param>
        /// <param name="subpixel">Specify model localization accuracy.</param>
        /// <response code="200">Successful operation</response>
        /// <response code="400">Invalid name supplied</response>
        /// <response code="404">Name not found</response>
        [HttpPost]
        [Route("/ucloud/v1/matchers/{name}/find")]
        [ValidateModelState]
        [SwaggerOperation("MatcherFind")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ModelInstance>), description: "Successful operation")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiResponse), description: "Invalid name supplied")]
        [SwaggerResponse(statusCode: 404, type: typeof(ApiResponse), description: "Name not found")]
        public virtual IActionResult MatcherFind([FromRoute][Required]string name, [FromBody]Image image, [FromQuery][Range(0, 1)]float? minScore, [FromQuery]int? matchesCount, [FromQuery][Range(0, 1)]float? maxOverlap, [FromQuery]string subpixel)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ModelInstance>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiResponse));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ApiResponse));
            string exampleJson = null;
            exampleJson = "[ {\n  \"angles\" : [ 0.8008282, 0.8008282 ],\n  \"scores\" : [ 9.301444, 9.301444 ],\n  \"scales_row\" : [ 5.637377, 5.637377 ],\n  \"scales\" : [ 5.962134, 5.962134 ],\n  \"scales_col\" : [ 2.302136, 2.302136 ],\n  \"transforms\" : [ 7.0614014, 7.0614014 ],\n  \"rows\" : [ 1.4658129, 1.4658129 ],\n  \"cols\" : [ 6.0274563, 6.0274563 ]\n}, {\n  \"angles\" : [ 0.8008282, 0.8008282 ],\n  \"scores\" : [ 9.301444, 9.301444 ],\n  \"scales_row\" : [ 5.637377, 5.637377 ],\n  \"scales\" : [ 5.962134, 5.962134 ],\n  \"scales_col\" : [ 2.302136, 2.302136 ],\n  \"transforms\" : [ 7.0614014, 7.0614014 ],\n  \"rows\" : [ 1.4658129, 1.4658129 ],\n  \"cols\" : [ 6.0274563, 6.0274563 ]\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<ModelInstance>>(exampleJson)
                        : default(List<ModelInstance>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// List matchers
        /// </summary>
        /// <remarks>Get the list of all matchers.</remarks>
        /// <response code="200">Successful operation</response>
        [HttpGet]
        [Route("/ucloud/v1/matchers")]
        [ValidateModelState]
        [SwaggerOperation("MatcherList")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Matcher>), description: "Successful operation")]
        public virtual IActionResult MatcherList()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Matcher>));
            string exampleJson = null;
            exampleJson = "[ {\n  \"angle_extent\" : 6.0274563,\n  \"angle_step\" : 1.4658129,\n  \"scale\" : [ 6.846853, 6.846853, 6.846853 ],\n  \"pyramids\" : 1,\n  \"type\" : \"NCC\",\n  \"angle_start\" : 0.8008282,\n  \"feature_type\" : \"lepetit\",\n  \"scale_row\" : [ 1.4894159, 1.4894159, 1.4894159 ],\n  \"feature_options\" : {\n    \"patch_size\" : 31,\n    \"depth\" : 2,\n    \"rotation_min\" : 3.6160767,\n    \"rotation_max\" : 2.027123,\n    \"count\" : 106,\n    \"perspective\" : true,\n    \"scale_max\" : 7.386282,\n    \"scale_min\" : 4.145608\n  },\n  \"optimization\" : \"auto\",\n  \"min_contrast\" : 5.637377,\n  \"contrast\" : [ 5.962134, 5.962134, 5.962134 ],\n  \"id\" : \"id\",\n  \"scale_col\" : [ 1.0246457, 1.0246457, 1.0246457 ],\n  \"polarity\" : \"enforce\"\n}, {\n  \"angle_extent\" : 6.0274563,\n  \"angle_step\" : 1.4658129,\n  \"scale\" : [ 6.846853, 6.846853, 6.846853 ],\n  \"pyramids\" : 1,\n  \"type\" : \"NCC\",\n  \"angle_start\" : 0.8008282,\n  \"feature_type\" : \"lepetit\",\n  \"scale_row\" : [ 1.4894159, 1.4894159, 1.4894159 ],\n  \"feature_options\" : {\n    \"patch_size\" : 31,\n    \"depth\" : 2,\n    \"rotation_min\" : 3.6160767,\n    \"rotation_max\" : 2.027123,\n    \"count\" : 106,\n    \"perspective\" : true,\n    \"scale_max\" : 7.386282,\n    \"scale_min\" : 4.145608\n  },\n  \"optimization\" : \"auto\",\n  \"min_contrast\" : 5.637377,\n  \"contrast\" : [ 5.962134, 5.962134, 5.962134 ],\n  \"id\" : \"id\",\n  \"scale_col\" : [ 1.0246457, 1.0246457, 1.0246457 ],\n  \"polarity\" : \"enforce\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Matcher>>(exampleJson)
                        : default(List<Matcher>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create matcher
        /// </summary>
        /// <remarks>Create a new matcher which can be used to find similar models in input images.</remarks>
        /// <param name="data">Matcher for finding models</param>
        /// <response code="201">Successfully created</response>
        /// <response code="409">Input already exists</response>
        /// <response code="422">Invalid input</response>
        [HttpPost]
        [Route("/ucloud/v1/matchers")]
        [ValidateModelState]
        [SwaggerOperation("MatcherNew")]
        [SwaggerResponse(statusCode: 201, type: typeof(ApiResponse), description: "Successfully created")]
        [SwaggerResponse(statusCode: 409, type: typeof(ApiResponse), description: "Input already exists")]
        [SwaggerResponse(statusCode: 422, type: typeof(ApiResponse), description: "Invalid input")]
        public virtual IActionResult MatcherNew([FromBody]Matcher data)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ApiResponse));

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(ApiResponse));

            //TODO: Uncomment the next line to return response 422 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(422, default(ApiResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\",\n  \"type\" : \"type\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<ApiResponse>(exampleJson)
                        : default(ApiResponse);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete a matcher
        /// </summary>
        /// <remarks>Delete a matcher by name.</remarks>
        /// <param name="name">Matcher name to delete</param>
        /// <response code="204">Successful operation</response>
        /// <response code="400">Invalid name supplied</response>
        /// <response code="404">Name not found</response>
        [HttpDelete]
        [Route("/ucloud/v1/matchers/{name}")]
        [ValidateModelState]
        [SwaggerOperation("MatcherRemove")]
        [SwaggerResponse(statusCode: 204, description: "Successful operation")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiResponse), description: "Invalid name supplied")]
        [SwaggerResponse(statusCode: 404, type: typeof(ApiResponse), description: "Name not found")]
        public virtual IActionResult MatcherRemove([FromRoute][Required]string name)
        { 
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiResponse));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ApiResponse));


            throw new NotImplementedException();
        }

        /// <summary>
        /// Update matcher
        /// </summary>
        /// <remarks>Update a matcher.</remarks>
        /// <param name="name">Matcher name to query</param>
        /// <param name="data">Updated matcher data</param>
        /// <response code="200">Successful operation</response>
        /// <response code="400">Invalid name supplied</response>
        /// <response code="404">Name not found</response>
        /// <response code="422">Invalid input</response>
        [HttpPut]
        [Route("/ucloud/v1/matchers/{name}")]
        [ValidateModelState]
        [SwaggerOperation("MatcherUpdate")]
        [SwaggerResponse(statusCode: 200, type: typeof(ApiResponse), description: "Successful operation")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiResponse), description: "Invalid name supplied")]
        [SwaggerResponse(statusCode: 404, type: typeof(ApiResponse), description: "Name not found")]
        [SwaggerResponse(statusCode: 422, type: typeof(ApiResponse), description: "Invalid input")]
        public virtual IActionResult MatcherUpdate([FromRoute][Required]string name, [FromBody]Matcher data)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ApiResponse));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiResponse));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ApiResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"code\" : 0,\n  \"id\" : \"id\",\n  \"message\" : \"message\"\n}";
            exampleJson = "<null>\n  <code>123</code>\n  <id>aeiou</id>\n  <message>aeiou</message>\n</null>";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<ApiResponse>(exampleJson)
                        : default(ApiResponse);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update matcher with form data
        /// </summary>
        /// <remarks>Update a matcher with form data.</remarks>
        /// <param name="name">Matcher name to query</param>
        /// <param name="data">Updated matcher data</param>
        /// <response code="200">Successful operation</response>
        /// <response code="400">Invalid name supplied</response>
        /// <response code="404">Name not found</response>
        /// <response code="422">Invalid input</response>
        [HttpPost]
        [Route("/ucloud/v1/matchers/{name}")]
        [ValidateModelState]
        [SwaggerOperation("MatcherUpdateForm")]
        [SwaggerResponse(statusCode: 200, type: typeof(ApiResponse), description: "Successful operation")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiResponse), description: "Invalid name supplied")]
        [SwaggerResponse(statusCode: 404, type: typeof(ApiResponse), description: "Name not found")]
        [SwaggerResponse(statusCode: 422, type: typeof(ApiResponse), description: "Invalid input")]
        public virtual IActionResult MatcherUpdateForm([FromRoute][Required]string name, [FromForm]string data)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ApiResponse));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiResponse));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ApiResponse));

            //TODO: Uncomment the next line to return response 422 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(422, default(ApiResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\",\n  \"type\" : \"type\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<ApiResponse>(exampleJson)
                        : default(ApiResponse);            //TODO: Change the data returned
            return new ObjectResult(example);
        }


        /// <summary>
        /// View matcher
        /// </summary>
        /// <remarks>View a matcher by name.</remarks>
        /// <param name="name">Matcher name to query</param>
        /// <response code="200">Successful operation</response>
        /// <response code="400">Invalid name supplied</response>
        /// <response code="404">Name not found</response>
        [HttpGet]
        [Route("/ucloud/v1/matchers/{name}")]
        [ValidateModelState]
        [SwaggerOperation("MatcherView")]
        [SwaggerResponse(statusCode: 200, type: typeof(Matcher), description: "Successful operation")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiResponse), description: "Invalid name supplied")]
        [SwaggerResponse(statusCode: 404, type: typeof(ApiResponse), description: "Name not found")]
        public virtual IActionResult MatcherView([FromRoute][Required]string name)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Matcher));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiResponse));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ApiResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"angle_extent\" : 6.0274563,\n  \"angle_step\" : 1.4658129,\n  \"scale\" : [ 6.846853, 6.846853, 6.846853 ],\n  \"pyramids\" : 1,\n  \"type\" : \"NCC\",\n  \"angle_start\" : 0.8008282,\n  \"feature_type\" : \"lepetit\",\n  \"scale_row\" : [ 1.4894159, 1.4894159, 1.4894159 ],\n  \"feature_options\" : {\n    \"patch_size\" : 31,\n    \"depth\" : 2,\n    \"rotation_min\" : 3.6160767,\n    \"rotation_max\" : 2.027123,\n    \"count\" : 106,\n    \"perspective\" : true,\n    \"scale_max\" : 7.386282,\n    \"scale_min\" : 4.145608\n  },\n  \"optimization\" : \"auto\",\n  \"min_contrast\" : 5.637377,\n  \"contrast\" : [ 5.962134, 5.962134, 5.962134 ],\n  \"id\" : \"id\",\n  \"scale_col\" : [ 1.0246457, 1.0246457, 1.0246457 ],\n  \"polarity\" : \"enforce\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Matcher>(exampleJson)
                        : default(Matcher);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        #endregion

    }
}

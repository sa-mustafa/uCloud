/*
 * uCloud API collection
 *
 * uCloud is a collection of image APIs.
 *
 * OpenAPI spec version: 1.0.2
 * Contact: help@bps-eng.co.ir
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

namespace Bps.uCloud.API.Controllers
{
    using System;
    using System.Collections.Generic;
    using Microsoft.AspNetCore.Mvc;
    using Swashbuckle.AspNetCore.Annotations;
    using Swashbuckle.AspNetCore.SwaggerGen;
    using Newtonsoft.Json;
    using System.ComponentModel.DataAnnotations;
    using Bps.uCloud.API.Attributes;
    using Bps.uCloud.API.Security;
    using Microsoft.AspNetCore.Authorization;
    using Bps.uCloud.API.Models;
    using Bps.uCloud.API.Settings;
    using Bps.uCloud.Contracts.Entities;

    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ClassifierApiController : ControllerBase
    {
        #region Fields

        IAppSettings app;

        #endregion

        #region Constructor

        public ClassifierApiController(IAppSettings appSettings)
        {
            app = appSettings;
        }

        #endregion

        #region Methods

        /// <summary>
        /// Identify image
        /// </summary>
        /// <remarks>Identify an image by a trained classifier.</remarks>
        /// <param name="name">Classifier name to query</param>
        /// <param name="image">Image data for identification</param>
        /// <response code="200">Successful operation</response>
        /// <response code="400">Invalid name supplied</response>
        /// <response code="404">Name not found</response>
        /// <response code="422">Invalid input</response>
        [HttpPost]
        [Route("/ucloud/v1/classifiers/{name}/identify")]
        [ValidateModelState]
        [SwaggerOperation("ClassifierIdentify")]
        [SwaggerResponse(statusCode: 200, type: typeof(SampleImage), description: "Successful operation")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiResponse), description: "Invalid name supplied")]
        [SwaggerResponse(statusCode: 404, type: typeof(ApiResponse), description: "Name not found")]
        [SwaggerResponse(statusCode: 422, type: typeof(ApiResponse), description: "Invalid input")]
        public virtual IActionResult ClassifierIdentify([FromRoute][Required]string name, [FromBody]Image image)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SampleImage));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiResponse));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ApiResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"name\" : \"name\",\n  \"index\" : \"index\",\n  \"id\" : \"id\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<SampleImage>(exampleJson)
                        : default(SampleImage);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Add image to classifier
        /// </summary>
        /// <remarks>Add a new image to classifier. Classifier uses these images for training. Multiple images of the same object should be added for enhanced results.</remarks>
        /// <param name="name">Classifier name to query</param>
        /// <param name="image">Image data for feature extraction</param>
        /// <param name="index">Sample image index. Use multiple images with the same index and name for robustness.</param>
        /// <param name="imageName">Sample image name</param>
        /// <response code="200">Successful operation</response>
        /// <response code="400">Invalid name supplied</response>
        /// <response code="404">Name not found</response>
        [HttpPost]
        [Route("/ucloud/v1/classifiers/{name}/image")]
        [ValidateModelState]
        [SwaggerOperation("ClassifierImageNew")]
        [SwaggerResponse(statusCode: 200, type: typeof(ApiResponse), description: "Successful operation")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiResponse), description: "Invalid name supplied")]
        [SwaggerResponse(statusCode: 404, type: typeof(ApiResponse), description: "Name not found")]
        public virtual IActionResult ClassifierImageNew([FromRoute][Required]string name, [FromBody]Image image, [FromQuery][Required()]decimal? index, [FromQuery]string imageName)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ApiResponse));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiResponse));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ApiResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\",\n  \"type\" : \"type\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<ApiResponse>(exampleJson)
                        : default(ApiResponse);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete an image
        /// </summary>
        /// <remarks>Delete an image by index.</remarks>
        /// <param name="name">Classifier name to query</param>
        /// <param name="imageName">Image name to delete</param>
        /// <response code="204">Successful operation</response>
        /// <response code="400">Invalid name supplied</response>
        /// <response code="404">Name not found</response>
        [HttpDelete]
        [Route("/ucloud/v1/classifiers/{name}/image/{imageName}")]
        [ValidateModelState]
        [SwaggerOperation("ClassifierImageRemove")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiResponse), description: "Invalid name supplied")]
        [SwaggerResponse(statusCode: 404, type: typeof(ApiResponse), description: "Name not found")]
        public virtual IActionResult ClassifierImageRemove([FromRoute][Required]string name, [FromRoute][Required]string imageName)
        { 
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiResponse));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ApiResponse));


            throw new NotImplementedException();
        }

        /// <summary>
        /// Update image info
        /// </summary>
        /// <remarks>Update image info in a classifier.</remarks>
        /// <param name="name">Classifier name to query</param>
        /// <param name="imageName">Image name to update</param>
        /// <param name="image">Updated image data</param>
        /// <response code="200">Successful operation</response>
        /// <response code="400">Invalid name supplied</response>
        /// <response code="404">Name not found</response>
        /// <response code="422">Invalid input</response>
        [HttpPut]
        [Route("/ucloud/v1/classifiers/{name}/image/{imageName}")]
        [ValidateModelState]
        [SwaggerOperation("ClassifierImageUpdate")]
        [SwaggerResponse(statusCode: 200, type: typeof(ApiResponse), description: "Successful operation")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiResponse), description: "Invalid name supplied")]
        [SwaggerResponse(statusCode: 404, type: typeof(ApiResponse), description: "Name not found")]
        [SwaggerResponse(statusCode: 422, type: typeof(ApiResponse), description: "Invalid input")]
        public virtual IActionResult ClassifierImageUpdate([FromRoute][Required]string name, [FromRoute][Required]string imageName, [FromBody]SampleImage image)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ApiResponse));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiResponse));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ApiResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\",\n  \"type\" : \"type\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<ApiResponse>(exampleJson)
                        : default(ApiResponse);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update image with form data
        /// </summary>
        /// <remarks>Update an image in a classifier with form data.</remarks>
        /// <param name="name">Classifier name to query</param>
        /// <param name="imageName">Image name to update</param>
        /// <param name="image">Updated image data</param>
        /// <response code="200">Successful operation</response>
        /// <response code="400">Invalid name supplied</response>
        /// <response code="404">Name not found</response>
        /// <response code="422">Invalid input</response>
        [HttpPost]
        [Route("/ucloud/v1/classifiers/{name}/image/{imageName}")]
        [ValidateModelState]
        [SwaggerOperation("ClassifierImageUpdatePost")]
        [SwaggerResponse(statusCode: 200, type: typeof(ApiResponse), description: "Successful operation")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiResponse), description: "Invalid name supplied")]
        [SwaggerResponse(statusCode: 404, type: typeof(ApiResponse), description: "Name not found")]
        [SwaggerResponse(statusCode: 422, type: typeof(ApiResponse), description: "Invalid input")]
        public virtual IActionResult ClassifierImageUpdatePost([FromRoute][Required]string name, [FromRoute][Required]string imageName, [FromForm][Required()]string image)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ApiResponse));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiResponse));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ApiResponse));

            //TODO: Uncomment the next line to return response 422 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(422, default(ApiResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\",\n  \"type\" : \"type\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<ApiResponse>(exampleJson)
                        : default(ApiResponse);            //TODO: Change the data returned
            return new ObjectResult(example);
        }


        /// <summary>
        /// View image info
        /// </summary>
        /// <remarks>View an image info in a classifier.</remarks>
        /// <param name="name">Classifier name to query</param>
        /// <param name="imageName">Image name to view</param>
        /// <response code="200">Successful operation</response>
        /// <response code="400">Invalid name supplied</response>
        /// <response code="404">Name not found</response>
        [HttpGet]
        [Route("/ucloud/v1/classifiers/{name}/image/{imageName}")]
        [ValidateModelState]
        [SwaggerOperation("ClassifierImageView")]
        [SwaggerResponse(statusCode: 200, type: typeof(SampleImage), description: "Successful operation")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiResponse), description: "Invalid name supplied")]
        [SwaggerResponse(statusCode: 404, type: typeof(ApiResponse), description: "Name not found")]
        public virtual IActionResult ClassifierImageView([FromRoute][Required]string name, [FromRoute][Required]string imageName)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SampleImage));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiResponse));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ApiResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"name\" : \"name\",\n  \"index\" : \"index\",\n  \"id\" : \"id\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<SampleImage>(exampleJson)
                        : default(SampleImage);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// List classifiers
        /// </summary>
        /// <remarks>Get the list of all classifiers.</remarks>
        /// <response code="200">Successful operation</response>
        [HttpGet]
        [Route("/ucloud/v1/classifiers")]
        [ValidateModelState]
        [SwaggerOperation("ClassifierList")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Classifier>), description: "Successful operation")]
        public virtual IActionResult ClassifierList()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Classifier>));
            string exampleJson = null;
            exampleJson = "[ {\n  \"use_texture_info\" : true,\n  \"use_color_info\" : false,\n  \"resize_value\" : 0.8008282,\n  \"resize_options\" : \"image_area\",\n  \"name\" : \"name\",\n  \"id\" : \"id\",\n  \"tag\" : \"tag\"\n}, {\n  \"use_texture_info\" : true,\n  \"use_color_info\" : false,\n  \"resize_value\" : 0.8008282,\n  \"resize_options\" : \"image_area\",\n  \"name\" : \"name\",\n  \"id\" : \"id\",\n  \"tag\" : \"tag\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Classifier>>(exampleJson)
                        : default(List<Classifier>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create classifier
        /// </summary>
        /// <remarks>Create a new classifier which identifies input images into known classes.</remarks>
        /// <param name="data">Classifier for identifying images</param>
        /// <response code="201">Successfully created</response>
        /// <response code="409">Input already exists</response>
        /// <response code="422">Invalid input</response>
        [HttpPost]
        [Route("/ucloud/v1/classifiers")]
        [ValidateModelState]
        [SwaggerOperation("ClassifierNew")]
        [SwaggerResponse(statusCode: 201, type: typeof(ApiResponse), description: "Successfully created")]
        [SwaggerResponse(statusCode: 409, type: typeof(ApiResponse), description: "Input already exists")]
        [SwaggerResponse(statusCode: 422, type: typeof(ApiResponse), description: "Invalid input")]
        public virtual IActionResult ClassifierNew([FromBody]Classifier data)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ApiResponse));

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(ApiResponse));

            //TODO: Uncomment the next line to return response 422 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(422, default(ApiResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\",\n  \"type\" : \"type\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<ApiResponse>(exampleJson)
                        : default(ApiResponse);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete a classifier
        /// </summary>
        /// <remarks>Delete a classifier by name.</remarks>
        /// <param name="name">Classifier name to delete</param>
        /// <response code="204">Successful operation</response>
        /// <response code="400">Invalid name supplied</response>
        /// <response code="404">Name not found</response>
        [HttpDelete]
        [Route("/ucloud/v1/classifiers/{name}")]
        [ValidateModelState]
        [SwaggerOperation("ClassifierRemove")]
        [SwaggerResponse(statusCode: 204, description: "Successful operation")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiResponse), description: "Invalid name supplied")]
        [SwaggerResponse(statusCode: 404, type: typeof(ApiResponse), description: "Name not found")]
        public virtual IActionResult ClassifierRemove([FromRoute][Required]string name)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ApiResponse));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiResponse));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ApiResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\",\n  \"type\" : \"type\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<ApiResponse>(exampleJson)
                        : default(ApiResponse);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Train a classifier
        /// </summary>
        /// <remarks>Train classifier using sample images provided to the classifier.</remarks>
        /// <param name="name">Classifier name to query</param>
        /// <response code="200">Successful operation</response>
        /// <response code="400">Invalid name supplied</response>
        /// <response code="404">Name not found</response>
        [HttpPost]
        [Route("/ucloud/v1/classifiers/{name}/train")]
        [ValidateModelState]
        [SwaggerOperation("ClassifierTrain")]
        [SwaggerResponse(statusCode: 200, type: typeof(ApiResponse), description: "Successful operation")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiResponse), description: "Invalid name supplied")]
        [SwaggerResponse(statusCode: 404, type: typeof(ApiResponse), description: "Name not found")]
        public virtual IActionResult ClassifierTrain([FromRoute][Required]string name)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ApiResponse));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiResponse));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ApiResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\",\n  \"type\" : \"type\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<ApiResponse>(exampleJson)
                        : default(ApiResponse);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update classifier
        /// </summary>
        /// <remarks>Update a classifier.</remarks>
        /// <param name="name">Classifier name to query</param>
        /// <param name="data">Updated classifier data</param>
        /// <response code="200">Successful operation</response>
        /// <response code="400">Invalid name supplied</response>
        /// <response code="404">Name not found</response>
        /// <response code="422">Invalid input</response>
        [HttpPut]
        [Route("/ucloud/v1/classifiers/{name}")]
        [ValidateModelState]
        [SwaggerOperation("ClassifierUpdate")]
        [SwaggerResponse(statusCode: 200, type: typeof(ApiResponse), description: "Successful operation")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiResponse), description: "Invalid name supplied")]
        [SwaggerResponse(statusCode: 404, type: typeof(ApiResponse), description: "Name not found")]
        [SwaggerResponse(statusCode: 422, type: typeof(ApiResponse), description: "Invalid input")]
        public virtual IActionResult ClassifierUpdate([FromRoute][Required]string name, [FromBody]Classifier data)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ApiResponse));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiResponse));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ApiResponse));

            //TODO: Uncomment the next line to return response 422 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(422, default(ApiResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\",\n  \"type\" : \"type\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<ApiResponse>(exampleJson)
                        : default(ApiResponse);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update classifier with form data
        /// </summary>
        /// <remarks>Update a classifier with form data.</remarks>
        /// <param name="name">Classifier name to query</param>
        /// <param name="data">Updated classifier data</param>
        /// <response code="200">Successful operation</response>
        /// <response code="400">Invalid name supplied</response>
        /// <response code="404">Name not found</response>
        /// <response code="422">Invalid input</response>
        [HttpPost]
        [Route("/ucloud/v1/classifiers/{name}")]
        [ValidateModelState]
        [SwaggerOperation("ClassifierUpdateForm")]
        [SwaggerResponse(statusCode: 200, type: typeof(ApiResponse), description: "Successful operation")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiResponse), description: "Invalid name supplied")]
        [SwaggerResponse(statusCode: 404, type: typeof(ApiResponse), description: "Name not found")]
        [SwaggerResponse(statusCode: 422, type: typeof(ApiResponse), description: "Invalid input")]
        public virtual IActionResult ClassifierUpdateForm([FromRoute][Required]string name, [FromForm]string data)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ApiResponse));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiResponse));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ApiResponse));

            //TODO: Uncomment the next line to return response 422 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(422, default(ApiResponse));

            string exampleJson = null;
            exampleJson = "{\n  \"code\" : 0,\n  \"id\" : \"id\",\n  \"message\" : \"message\"\n}";
            exampleJson = "<null>\n  <code>123</code>\n  <id>aeiou</id>\n  <message>aeiou</message>\n</null>";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ApiResponse>(exampleJson)
            : default(ApiResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// View classifier
        /// </summary>
        /// <remarks>View a classifier by name.</remarks>
        /// <param name="name">Classifier name to query</param>
        /// <response code="200">Successful operation</response>
        /// <response code="400">Invalid name supplied</response>
        /// <response code="404">Name not found</response>
        [HttpGet]
        [Route("/ucloud/v1/classifiers/{name}")]
        [ValidateModelState]
        [SwaggerOperation("ClassifierView")]
        [SwaggerResponse(statusCode: 200, type: typeof(Classifier), description: "Successful operation")]
        [SwaggerResponse(statusCode: 400, type: typeof(ApiResponse), description: "Invalid name supplied")]
        [SwaggerResponse(statusCode: 404, type: typeof(ApiResponse), description: "Name not found")]
        public virtual IActionResult ClassifierView([FromRoute][Required]string name)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Classifier));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ApiResponse));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ApiResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"use_texture_info\" : true,\n  \"use_color_info\" : false,\n  \"resize_value\" : 0.8008282,\n  \"resize_options\" : \"image_area\",\n  \"name\" : \"name\",\n  \"id\" : \"id\",\n  \"tag\" : \"tag\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Classifier>(exampleJson)
                        : default(Classifier);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        #endregion
    }
}
